plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "io.gitlab.arturbosch.detekt"
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.mrmpn.videogamedb'
    compileSdk 33

    defaultConfig {
        applicationId "com.mrmpn.videogamedb"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        archivesBaseName = "$applicationId-v$versionName($versionCode)"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties.getProperty('storeFile', 'release.keystore'))
            storePassword keystoreProperties.getProperty('storePassword')
            keyAlias keystoreProperties.getProperty('keyAlias')
            keyPassword keystoreProperties.getProperty('keyPassword')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    detekt {
        config = rootProject.files("config/detekt/detekt.yml")
        autoCorrect = true
        buildUponDefaultConfig = true
    }
    lintOptions {
        //checkDependencies true
        ignoreTestSources true
        lintConfig rootProject.file('config/lint/lint.xml')
    }
    testOptions.unitTests.all {
        testLogging {
            events = ["passed", "failed", "skipped", "standardOut", "standardError"]
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha05'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha05"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha05"
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation platform('androidx.compose:compose-bom:2023.01.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"
    implementation "io.coil-kt:coil:2.2.2"
    implementation "io.coil-kt:coil-compose:2.2.2"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.01.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    debugImplementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.22.0"
    detektPlugins "com.twitter.compose.rules:detekt:0.0.26"
    detektPlugins("ru.kode:detekt-rules-compose:1.2.2")
}